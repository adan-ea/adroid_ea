name: Analyse qualité
on:
  push:
    branches:
      - 4-upgrade-to-typescript
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ "4-upgrade-to-typescript" ]
jobs:
#---------------------------------------------------------------------------------------------------------------
# SonarCloud : Analyse qualité du code
#---------------------------------------------------------------------------------------------------------------
  sonarcloud:
    name: Analyse Qualité SonarCloud
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.sonar_status.outputs.status }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@de2e56b42aa84d0b1c5b622644ac17e505c9a049
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}  # Token GITHUB pour les PR
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # Token SonarCloud
        with:
          # Autres args Sonar
          args:
            # Clés uniques du projet
            -Dsonar.projectKey=kevin-fer_adroid_ea
            -Dsonar.organization=kevin-fer
      
      - name: Check Sonar Status
        uses: sonarcloud-actions/sonarcloud-check-status-action@v1   
        id: sonar_status
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          
      - name: Make API request
        env:
          BEARER_TOKEN: ${{ secrets.SONAR_BEARER }}
        run: |
          response=$(curl -X GET \
                     -H "Authorization: Bearer `${{ env.BEARER_TOKEN }}`" \
                     https://sonarcloud.io/api/ce/activity?deprecated=false&component=kevin-fer_adroid_ea)
          echo "$response"
          echo $BEARER_TOKEN

      - name: test
        run: echo ${{ steps.sonar_status.outputs.status }}  
        
      - name: Discord notifications
        uses: cl8dep/action-discord@main
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          message: 'Analyse SonarCloud complétée dans le projet Adroid. Pour consulter le rapport : https://sonarcloud.io/project/overview?id=kevin-fer_adroid_ea'
#---------------------------------------------------------------------------------------------------------------
# ESLint : Analyse de code statique JS/TS
#--------------------------------------------------------------------------------------------------------------- 
  eslint:
    name: Analyse eslint
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install ESLint
        run: |
          npm install eslint@8.10.0
          npm install @microsoft/eslint-formatter-sarif@2.1.7

      - name: Run ESLint
        run: npx eslint .
          --config .eslintrc.js
          --ext .js,.jsx,.ts,.tsx
          --format @microsoft/eslint-formatter-sarif
          --output-file eslint-results.sarif
        continue-on-error: true

      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: eslint-results.sarif
          wait-for-processing: true
      - name: Discord notifications
        uses: cl8dep/action-discord@main
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          message: 'Analyse Eslint terminée'
#---------------------------------------------------------------------------------------------------------------
# Jest : Tests avec Jest
#--------------------------------------------------------------------------------------------------------------- 
  jest:
    name: Unit test Jest
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    steps:
      - name: Install dependencies
        run: yarn
      # Si on utilise des tests unitaires JEST
      - name: Add Jest
        run: yarn add jest
      - name: Test and coverage
        run: yarn jest --coverage --passWithNoTests
      - name: Discord notifications
        uses: cl8dep/action-discord@main
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          message: 'Unit test avec jest terminés'
  
